杂项
设置开机启动
C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp


TotalCommand
快捷键
ctrl + \ 根目录
backspace 返回上一层
ctrl + d 收藏夹
atl + F1、F2 + c/d/e，切换盘符
ctrl + ←/→，另一个窗口打开
atl +↓，历史文件夹
atl +  ←/→ ，上一个/下一个访问目录
atl + 小键盘’+’/’-‘，扩大选择（Mark菜单）
F3查看，F4编辑，F5复制，F6剪贴，F7新建目录；配合shift还有功能；
ctrl + q快速查看
atl + F7，查找文件
ctrl + s，快速搜索
atl + enter，打开文件属性
ctrl + p，复制路径到命令行
ctrl + u，交换左右窗口
shift + F2，对比目录
ctrl + ↑，添加光标目录tab；trl + t，添加当前目录tab；
ctrl + tab，切换tab；ctrl + w，关闭tab
ctrl + z，添加注释
按住ctrl + 点击，多列排序
ctrl + b，展开所有文件

功能
-	快速启动其他程序
-	批量重命名
-	解压缩
-	插件
-	等等

应用

便签
win7 命令：stikynot
win10在任务栏右键，打开window link

快捷键
ctrl + b，i 加粗，斜体
ctrl + l ,e,r 对齐
ctrl + t 删除线
ctrl + u，下划线
ctrl + shift + a，切换大小写
ctrl + shift + l，项目符号
ctrl + shift + <，> ，字号
ctrl + =，下标
ctrl + shift + =，上标
ctrl + 1,2,5，行距

win10有部分不行，但可以先word里编辑，其实上面的大多就是word里的快捷键；

x2粘贴过去竟然还是X2？还没win7好用，win10不用。


Snipaste
官网：www.snipaste.com

快捷键
F1截图
	ctrl + c复制，ctrl + s保存，esc取消，右键，重来；
	R，上一次截图区域
	‘,’，’.’，历史截图记录

上下左右，像素移动
ctrl + 上下左右，扩大缩小
c拷贝颜色，shift切换#和rgb，F3颜色卡，ctrl + v粘贴#或rgb；

F3、ctrl + t，粘贴到屏幕
	1顺时针90度旋转，2,逆时针90度，3，180度，4，上下翻转
	滚轮缩放；ctrl + 滚轮，透明度；
	中键还原；
shift + 双击，thumbnail
空格，编辑
shift + F3，全部隐藏
atl ，放大镜


虚拟桌面
win10 自带，win7可以下载dexpot；


快捷键
win + tab，任务视图
win + ctrl + d，新建桌面
win + ctrl + F4，关闭桌面
win + ctrl + 左右，切换桌面


AutoHotKey
官网下载后，不是双击exe运行的，是点击ahk文件，选择AutoHotkeyU64.exe运行的。
例如：
1，	编辑脚本：#space::Run www.baidu.com，保存为.ahk；
2，	双击运行（出现ahk程序图标）；
3，win + space –》 打开百度




Word2016



Dependency Walker
打开exe或者dll等文件，查看,有什么dll，一看就知道了，dll还调用其它dll，点击dll，导出的函数就看到了。
dll能说明一些东西，比如：
MFCXX.dll  	VC编写的
MSVCRXX.dll
ADVAPI32.DLL	注册表
WS2_32.DLL		网络通信
WININET.DLL	HTTP浏览和下载等功能
WINMM.DLL		多媒体
DDRAW.DLL		游戏、图像处理
D3D*.DLL		游戏、动画处理

Resource Hacker
dll没有任何输出函数，包含了大量资源。

windows系统有两种dll，一种要注册，一种不要。如何区分这两种dll，打开depend工具，如果找到DllRegisterServer，DllUnregisterServer这两个函数，就是要注册到系统中的。
regsvr32 dllname  regsvr32 /u dllname 命令对应调用上面的函数。

插件dll
在exe下的Addin或Plugin目录下的dll，exe调用指定的函数，dll导出指定的函数，这些函数及参数等作为插件协议提供给三方。

你所不知道的C和C++运行库 
http://blog.csdn.net/ithzhang/article/details/20160009

Dependency Walker使用说明 
http://blog.csdn.net/swort_177/article/details/5426848

dll调用其它的dll？如何做到？



calc
MC 存储清除Memory Clear
MR 存储读取
MS 存储
M+ 存储加上


SVN
创建目录如 e:\svn 用来存储各种需要进行版本管理的文档；
继续创建目录如 e:\svn\repository_1 用来管理日志文件，文档存储仓库；
然后在任意位置创建文件夹如：MedicAdmin，右键check out，
注意：在路径那指定到repository_1即可，图标变绿。然后再建工程！
原来怎么点都没反应，重装一个就好了，蛋疼！


CHM
教程：http://blog.csdn.net/augusdi/article/details/7448281
Compiled HTML帮助文档，windows自带解释器（hh.exe）。
HTML Help Workshop MS工具。
制作html（webstorm等），略。
新建工程
打开 HTML Help Workshop，新建工程，.hhp，添加html文件，目录，索引等。
问题：html图片显示叉； 
原因：不要像下面这样建立文件夹；
 
图片和html放在同一级。

 
导入html文件，编译运行
 
建立目录
点击Contents建立目录，把相应的html关联即可
问题：
 
原因是：
 
改成 Zh-cn 和gb2312就可以了。
定制窗口
点击ADD/MODIFY WINDOW DEFINITIONS
General
窗口名
Buttons
你要用的按钮
Position 窗口出现的位置
Files 主页跳转页索引选项卡
Navigation Pane
Search tab勾选出现搜索选项卡，Advanced是进一步搜索，Favorites Tab就是书签选项卡，可以对你常用的帮助页面进行快速的定位。
添加了搜索选项卡后，还要切换到Project选项卡，点左侧工具栏"Change Project Options"按钮"Compiler"下"Compiler full-text search information"，全文搜索只搜索文本。
制作索引
类似建立目录
索引选项卡要在Files里指定
集成到VC中
新建.txt和.h文件
.txt 格式  [topic]  [topic ID]  [help topic]  如：帮助一 IDH_FORM 第一个窗口
.h 定义： #define IDH_FORM 1 
IDH_FORM 是 topic ID， topic 是 建立的目录， help topic是 说明
建立好后，点击HtmlHelp API information
Map 导入头文件
Alias -> Add -> 第一个是topic ID，第二个是关联的html，第三个是注释
Text Pop-ups -> 导入.h和.txt
多出.chw文件。
MS提供htmlhelp API函数，它被集成到hhctrl.ocx中，你安装html help workshop就安装了这个控件了。
在vc中的函数原型为
HWND WINAPI HtmlHelp(
  _In_opt_ HWND   hwndCaller,
  _In_     LPCSTR pszFile,  .chm路径
  _In_     UINT   uCommand,  
•	HH_DISPLAY_TEXT_POPUP 
•	HH_DISPLAY_TOPIC 
•	HH_HELP_CONTEXT 
•	HH_TP_HELP_CONTEXTMENU 
•	HH_TP_HELP_WM_HELP 

  _In_     DWORD  dwData  看uCommand
);
;调用时需要包含Htmlhelp.lib 和 Htmlhelp.h这两个文件
打开帮助文档：
CMainFrame::OnHelp() { ::HtmlHelp(GetSafeHwnd(),
		_T("chm1.chm"),  chm1.chm::/liuyifei.html
		HH_DISPLAY_TOC,
		0);}
::HtmlHelp(GetSafeHwnd(),
		_T("chm1.chm"),
		HH_DISPLAY_INDEX,
		(DWORD)_T("刘亦菲"));
 


Ditto
详细功能介绍
https://xbeta.info/ditto.htm
常用操作
ctrl + ` 打开界面
打开界面后，按数字，直接粘贴；ctrl按住+方向键粘贴；Alt+Enter在属性里设置热键，按热键；Alt+Enter设置Quick Paste Text，然后再搜索栏中 /q xxx；

cmd和gvim
Ditto的粘贴，先把此内容放在windows粘贴板，然后，向目标程序发送模拟按键 Ctrl+V，
而在cmd和gvim中，ctrl+v不是粘贴。
解决：修改注册表（免安装没有）[HKEY_CURRENT_USER\Software\Ditto]
 
“% {Delay100}ep”，即先按下“alt+空格”（弹出菜单），延时100毫秒，再按下e（编辑）p（粘贴）
然并卵
Alt+C清空搜索
Ctrl+N 新建粘贴
Ctrl+F7 新建组 Ctrl+G 打开组


Redis
部署redis服务：
1）GitHub上下载 https://github.com/MSOpenTech/redis/releases
下载后
 
2）cmd 运行 redis-server  redis.windows.conf
3）用redis Desktop Manager 连接 
 




OneNotes
SkyDrive是微软最新Windows LIVE的一个功能组件，可以实现Live用户在异地利用Office进行协同办公的功能。在Office 2010中已经集成了这个功能。
它在这： 


先要注册一个自己的Windows Live Idh或者MSN账号
maoyinan@outlook.com
dmxjMao0@zyhyjqr


同步笔记：
先翻墙！



Bonjour 
迅捷、即时网络
　　无需配置，没有繁琐复杂。这多亏了 Bonjour 技术，它使电脑和智能设备之间的协作如同连接它们一样简单。
自动连接
　　采用 Bonjour 技术的电脑和设备可以自动传播它们自己的服务，并探寻为其他设备提供的服务。你的电脑能够看到可以打印的打印机，可以听的 iTunes 播放列表，以及可以视频聊天的 iChat 好友。设置可以进行文件共享的另一台电脑。
重新定义移动性
　　有了 Bonjour，你将以全新的方式看待联网。比如你和同事带着 MacBook 外出，你需要共享大型文件，但离最新的无线网络也有很远的距离。此时 Bonjour 就能帮你们解围。支持 AirPort 的 MacBook 能够发现彼此，而且使文件共享变得很简单。
标准典范
　　Bonjour 结合了如今最受欢迎的标准连接技术，包括以太网和 AirPort (802.11)。它使用普遍存在的标准 IP 网络协议进行连接，与运行互联网的协议相同。而且所有驱动 Bonjour 的技术都是开放的——都是 IETF 标准制作过程的一部分，Bonjour 本身也是。
零配置，无论何处
　　现在，每一位使用 Windows PC 的用户都可以免费享用 Bonjour。利用 Bonjour 安装向导( Bonjour Setup Wizard ) 在 Windows 系统下安装打印机和在 Mac OS X 里一样简单（但是我们不能让它们看起来一样漂亮）。Bonjour for Windows 包括一个 Internet Explorer 插件，即使你不知道其 IP 地址也可以设置安装支持 Bonjour 的设备。你甚至可以用通过 USB 与 Airport Extreme 基站或 Airport Express 连接的打印机打印。如果你是一个开放源代码爱好者，则可以下载 Bonjour 源代码来创建适用于任何平台的软件。
加入 Bonjour 联盟
　　现在，各大打印机制造商已经采用了苹果公司的 Bonjour 技术，因此你可以将任何现代打印机添加到网络中，且根本无需配置。你的 Mac 会自动发现并连接到网络上可用的任何支持 Bonjour 的打印机。
Bonjour 发话
　　苹果公司业界领先的浏览器 Safari，利用 Bonjour 可以找到你本地网络上任何 Bonjour 网页地址。在 Bonjour 的帮助下，你可以通过 iChat 看到本地网络上有谁可以音频或视频聊天，当他们离开时也将自动在网络上消失。iTunes 和 iPhoto 利用 Bonjour 帮助你在本地网络上共享音乐和照片。



Araxis Merge
一个可视化的文件比较、合并和同步的软件，能够方便的被软件工程师和 web 站点开发者使用快速精确地比较、了解和联合不同版本的源文件；进行版本和质量控制，创建 HTML 或是 XML 报告。



Outlook2010
配置方法
QQ
手动-》pop.qq.com smtp.qq.com  ->  其他设置  高级  1）勾选“此服务器要求加密连接（SSL）” 2） 发送服务器端口改成465或587   3）使用SSL加密连接  4） 去掉 “XX天后删除服务器上的邮件副本”

网易企业免费邮箱
pop.ym.163.com
用户名和账号别输错


SourceTree 
Windows 和Mac OS X 下免费的 Git 和 Hg 客户端，同时也是Mercurial和Subversion版本控制系统工具。支持创建、克隆、提交、push、pull 和合并等操作。

SourceTree拥有一个精美简洁的界面，大大简化了开发者与代码库之间的Git操作方式，这对于那些不熟悉Git命令的开发者来说非常实用。




3ds Max
下载插件：
网上搜索，如下载一个  能让3ds 导出 .X格式文件的 一个插件， 搜索” 3DS Max panda “，找到对应版本，下载好后 放到 3DS Max安装目录下的plugins中（.dle文件），然后重启软件即可；

注册机的使用，我有一个激活码，输入后要 联网验证的；



Git
概念：
https://git-scm.com/docs/git-remote
dmxjMao
dmxjMao@123

Git/GitHub
SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器哪里得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就纳闷了。

Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。

GitHub是提供Git代码存储的其中一个运营商(代码托管平台)。


所有的版本控制系统，只能跟踪文本文件的改动，比如txt文件，网页，所有程序的代码等，Git也不列外，版本控制系统可以告诉你每次的改动，但是图片，视频这些二进制文件，虽能也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是知道图片从1kb变成2kb，但是到底改了啥，版本控制也不知道。


远程仓库
注册github账号。 dmxjMao  dmxjMao@123
由于你的本地Git仓库和github仓库之间的传输是通过SSH加密的，所以需要一点设置：
第一步：创建SSH Key。在用户主目录下，看看有没有.ssh目录，没有则输入：ssh-keygen  -t rsa –C youremail@example.com创建。
id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。
第二步：登录github,打开” settings”中的SSH Keys页面，然后点击“Add SSH Key”,填上任意title，在Key文本框里黏贴id_rsa.pub文件的内容。
注意：有两种clone方式
直接使用https，push时要验证用户，而SSH在push时可以不用验证；还有前者可以随意克隆github上的项目，而不管是谁的；而后者则是你必须是你要克隆的项目的拥有者或管理员，且需要先添加 SSH key ，否则无法克隆。


工作区
电脑上看到的目录

版本库
.git隐藏文件
又名仓库，可理解为一个目录，这里面所有的文件都被.git管理着。
里面有很多东西，最重要的是stage(暂存区)。git还自动为我们创建第一个分支master，以及指向master的一个指针HEAD。


查看帮助
git help commit 

下面是针对实际应用的(可搜索找到相应的操作):
创建版本库：
新建文件夹，cd到目录，git init
.git隐藏文件生成，它是版本库

添加/提交文件
git add 文件名
git commit –m ‘注释’

查看是否还有文件未提交
git status

查看文件变化
git diff 文件名

查看版本历史
git log
git log –graph –pretty=oneline –abbrev-commit 一行 图形 短版本号

版本回退
git reset --hard HEAD~n
注意：我们可以用git reflog查看之前的所有版本
git reset –hard 版本号

撤销修改(不用git add/git commit添加版本)
git checkout –文件名
注意有两种撤销：
1，文件还没放到暂存区，回到上一个版本
2，文件放入暂存区，回到暂存区状态

删除文件
git rm 文件名
git commit 从版本库删除


更新文件
git pull 远程主机名 远程分支名：本地分支名（合并）
git pull origin next:master // 取远程origin主机 next分支，与本地master合并
git pull origin // 如果当前分支与远程分支存在追踪关系


创建远程仓库并关联本地仓库（先有本地再有远程）
git remote的作用就是关联上远程仓库，这样git push就知道往哪里提交代码；

登录github，create repository
git remote add origin https://github.com/dmxjMao/test
git push –u origin master 把本地master分支推送到远程master分支，第一次推送要-u
注意：从现在起，只要本地作了提交，就可以通过
git push origin master把修改推送到github上了

git for windows, 在remote 里， add， 输入用户名和你创建的仓库URL，选择Fetch，然后再push 提交到远程；

把分支推送到远程
git push origin 本地分支名:远程分支名  同样不能推送空的！

pull request
把你的本地修改提交给仓库作者，请求他合并你的代码，如果审核通过，你就为项目做贡献了；



克隆（先有远程再有本地）
git clone https://github.com/dmxjMao/test2


删除远程仓库
点进仓库，setting，delete

创建/切换分支
git checkout –b 分支名  // = git branch分支名（创建）git checkout分支名（切换）
git branch 查看当前分支
demo：
git checkout –b dev
修改a.txt文件
git add a.txt
git commit –m ‘...’
然后你再对比master和dev上的a.tx文件，master没有变，dev上的变了

合并/删除分支
git merge 分支名 先切换到master上
git branch –d 分支名
注意：1，通常git使用fast forward合并分支，在这种模式下，删除分支后，会丢掉分支信息， --no-ff 禁用
git merge –no-ff –m “...”
2，通常master是发布版本用的，干活都在分支上，当分支代码稳定后可以合并到master上。


冲突
解决

bug分支
开发到一半，遇到一个bug，但是当前分支上的工作还没提交。
git stash // 将当前工作现场隐藏
git chechout –b issue-404 // 然后拉条bug分支解决bug
解决后，切换到master合并：git merge --no-ff -m "merge bug fix 404" issue-404
删除分支：git branch –d issue-404
回到工作分支上干活：git checkout 分支名
恢复工作现场：git stash list  git stash pop stash@{n}
编码完成git add   git commit

查看远程库信息
git remote  远程库默认名称是origin
git remote –v 抓取分支，推送分支


推送到远程仓库
git push origin master // 推送到仓库的master分支上
注意：一般bug分支不用推送，可以先合并到主分支上，然后推送主分支

多人协作
另一个小伙伴git clone...
我们告诉他要在dev分支上开发，所以他必须把远程的dev分支下来（之前已经把dev分支推送到远程了git push origin dev），git checkout –b dev origin/dev
现在他就可以在分支上做开发了! 同样的编码完成，git add ，git commit git push...
但是冲突会使你push失败！
解决办法就是：git pull，（git pull也会失败，原因是没有指定本地dev分支与远程origin/dev分支的链接，git branch –set-upstream dev origin/dev），然后git pull，解决冲突git push。
注意：上面不是git的策略!git是鼓励每个人创建自己的分支的，然后等到你的分支成熟了，先反向merge，即先把master的合并到你的分支上，然后在github上pull require，合到主干；git是要保证master安全的。


退出git的vim
Esc退出输入状态，shift+; ，q!



备忘：
1，	没想到rc2，ico都要上传，不然down下来编不过。
2，	git add MsgStruct.h 竟然区分大小写。
3，	git commit –a 全部提交。


sourcetree
任何一个文件只有三种状态：commited，modified，staged（add）
一开始一直都没法提交，已暂存的文件一直没有，也不能提交，后来找到原因是：我得先在github上create repo，然后在sourcetree上clone，这样就有一个空的git了，然后再创建vs工程，提交代码。



Cygwin
命令
ls –help 查看帮助  也可以 man ls
ps   shell下的进程
df	磁盘
pwd	当前目录
cd /cygdrive/g 进入磁盘
ls  查看文件  -l 详细信息
mkdir 建立目录 rmdir
rm 删除文件

目录
~ 根目录 /home/mao
.  ..


工具
grep、cut、sed、strings、strace、md5sum、diff、patch、ssh、xxd...

写一个hello world程序
cd ...
mkdir ...
vim hello.c
vim需要安装，search vim，全部安装；
默认的vi(vim)没有配置文件，因此导致了方向键出现ABCD，以及Backspace只会移动光标，字符不消失的问题。
解决：
$ cd /usr/share/vim/vim74
$ cp vimrc_example.vim  ~/.vimrc
设置vim配置
打开vim ~/.vimrc
添加set number 显示行号  set tabstop=4 tab为4个空格

编辑 hello.c
vim有两种模式：命令，插入；
输入i进入插入模式；
esc进入命令，输入: ，然后输入命令；

wq

gcc hello.c –o/-s/ hello
gcc需要安装；

./hello


sublime text 3
下载
跨平台代码编辑器（Code Editor）;
教程：http://www.cnblogs.com/figure9/p/sublime-text-complete-guide.html
http://blog.csdn.net/u013861109/article/details/53106074

安装package control 方便管理插件，官网有方法；
插件下载
https://packagecontrol.io/ 去官网查找你想要的插件；
preferences-> package control ->install…  等待命令面板， 输入插件名;
插件集：http://www.oschina.net/translate/20-powerful-sublimetext-plugins
Emmet  html代码补全；
JavaScript & Node JS Snippets 
document.getElementById代码提示；
sidebarenhancement
侧边栏加强；

Emmet使用
1，div 按tab/ctrl+e  Abbreviations补全
2，ul>li*5 child，重复
dl>(dt+dd)*3  括号分组
ul>li.item$$$*5  序号001-005 ， ul>li.item$@3*5 3-7  ul>li.item$@-3*5 7-3
3，div#header+div.page+div#footer.class1.class2.class3 id，class属性
4，	快捷键：ctrl + t（修改emmet key binding）匹配标签
5，	{lorem} 实例文本
6，	输入! + tab，h5框架

SublimeLinter
SublimeLinter 是前端编码利器——Sublime Text 的一款插件，用于高亮提示用户编写的代码中存在的不规范和错误的写法，支持 JavaScript、CSS、HTML、Java、PHP、Python、Ruby 等十多种开发语言。
安装SublimeLinter-》SublimeLinter安装php-》在打开的配置文件里，搜索paths，找到下面的windows，配置php的绝对路径
lint_mode ：save only

DocBlockr
注释模板，

vs2015
http://download.microsoft.com/download/0/B/C/0BC321A4-013F-479C-84E6-4A2F90B11269/vs2015.com_enu.iso

版本控制
因为vs2015集成了git，所以不用下载git for windows插件；
打开team explorer窗口，右键sln，添加到版本控制；
导航窗口，状态栏，GitLab插件等都有很方便的管理菜单；
Git Tools插件
http://yysun.github.io/git-tools/#/
有文本对比，。。。
下载github上的工程
Home-》Project-》Manager Connections，Clone-》赋值项目地址，点击Clone即可；
上传本地sln
右键sln，添加到版本控制，在Github上创建一个空的项目，复制项目的git URL，在vs TeamExplorer里点击Sync，Public，输入URL即可；
上传修改
先stage一下修改，然后在Sync，outgoing Commits里出现，点击Push即可；

如何删除github上的项目
点击项目，setting，最下面有delete repo，



cinebench R15
CPU性能跑分软件
输入cinebench.com下载cinebench软件，安装，打开，点击CPU边上的run，得到跑分；
<400过时， [400,700]流行，>700大型软件ok；

cinebench.info查询主流cpu的跑分排行；


3dMark
游戏性能跑分软件
https://www.3dmark.com/

3dmark.com/search查询显卡跑分；


微软Keeper
备份代码
227440133、198235765、926957359、710733498、336010326、224686413、732821710、430286532；


vim
https://github.com/Vim/vim  注意Vim大写

yum remove vim-*
yum -y install ncurses-devel.x86_64
./configure --enable-pythoninterp=yes
make install
重启终端

Vundle
git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim

ctag-master
tagbar
不要把Plugin 'tagbar'注释了
nmap <F8> :TagbarToggle<CR>
let g:tagbar_width=20


NERDTree
map <F7> :NERDTreeToggle<CR>
autocmd vimenter * NERDTree " 随vim自动打开
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif " 一个窗口就关闭NERDTree


:NERDTree /home/marty/vim7/src
:NERDTree foo
NERDTreeFind [<path>] 查找文件

书签
先输入NERDTree进入
Bookmark name 创建节点书签
OpenBookmark name
ClearBookmarks name/ ClearAllBookmarks
B 书签列表

快捷键
输入?


NERD Commenter
根据文件类型 + 快捷键 生成注释
filetype plugin on
\ 为<Leader>符，<Leader>符默认为 \,在.vimrc中添加let mapleader = ","可将<Leader>符变为;
\cc 添加注释  \cu 取消注释
\c空格 "//" toggle注释  
\cm "/**/"注释
\cs /*
     *
     */
自定义注释？


youcompleteme
代码补全，语法检查，编译，tags等。
按官网安装,先更新vim到8.0
https://blog.csdn.net/nzyalj/article/details/75331822

vim-snippets
代码补全
下载 ultisnips引擎



ctrlp.vim
文件查找。
ctrl p, 打开查找面板, f切换
ctrl d,只找文件名, r正则
ctrl t,v,x 打开文件
ctrl n（n~）  ctrl p(p~)查找历史
@cd /path

vim-airline
状态栏,可以显示很多插件的内容,看文档配置.

vim-surround
快速输入匹配符:[],(),"",'',{},<标签>...
首先光标要在内容里,它们都是vim motion单元
ds" 删除" dst标签
cs]) , cs"<q>, cst<p> 替换
ysiw) 包装单词, yssb,包装行,ySiw),风骚包装;ysst标签
ctrl+v 模式, S]包装,gS{风骚包装
t标签, w小写单词, W大写, s句子, p段落, 
自定义, <? php ?>, <% \r %>...
" surround
autocmd FileType twig let b:surround_35 = "{# \r #}"
autocmd FileType twig let b:surround_37 = "{% \r %}"
autocmd FileType twig let b:surround_123 = "{{ \r }}"

Syntastic
语法检查。

fugitive.vim
git工具。

emmet
强大的html,css,xml缩写引擎，类css写法；
按ctrl+y+',';
常用：
1) ! -> h5骨架;
2) div#page>div.logo+ul#navigation>li#foo$*5>a  
	'>'子元素;
	‘+’兄弟('~');
	'*'重复，#foo$*5 foo1-5;
	^上一层: div+div>p>span+em^bq(blockquote);
	()组：(div>dl>(dt+dd)*3)+footer>p
	.class: span.c1.c2
	#id
	[]自定义属性: td[title="Hello world!" colspan=3] 不写值就是="";
	$数字:item_$$$*5, h$[title=item$]{Header $}*3
	@数字起点方向:item_$@-*5 5-1, @3*5 3-7
	{}文本：p>{Click }+a{here}+{ to continue}
	$#在[]或{}中代替包装文本

3) test1
   test2
V选择行，ctrl+y+','，输入Tag：ul>li* 或 blockquote
4) 
5) div>lorem,dummy text
6) css
	bdrs -> border-radius: bgc -> background-color:
	m10 -> margin: 10px; m10-20 -> margin: 10px 20px;
	m1+p2 -> margin: 1px;
		 padding: 2px;
	lg(left, #fc0 30%, red) 线性渐变
	-bdrs前缀


